// Ten program demonstruje zastosowanie algorytmu sortowania bąbelkowego.
#include <iostream>
using namespace std;

// Prototypy funkcji
void bubbleSort(int[], int);
void swap(int &, int &);

int main()
{
  const int SIZE = 6;

  // Tablica zawierająca nieposortowane wartości
  int values[SIZE] = { 6, 1, 5, 2, 4, 3 };

  // Wyświetlenie zawartości nieposortowanej tablicy
  cout << "Nieposortowane wartości:\n";
  for (auto element : values)
    cout << element << " ";
  cout << endl;

  // Sortowanie tablicy
  bubbleSort(values, SIZE);

  // Wyświetlenie zawartości posortowanej tablicy
  cout << "Posortowane wartości:\n";
  for (auto element : values)
    cout << element << " ";
  cout << endl;

  return 0;
}

//******************************************************************
// Funkcja bubbleSort() sortuje tablicę liczb całkowitych w kolejności rosnącej.
//******************************************************************
void bubbleSort(int array[], int size)
{
  int maxElement;
  int index;

  for (maxElement = size - 1; maxElement > 0; maxElement--)
  {
    for (index = 0; index < maxElement; index++)
    {
      if (array[index] > array[index + 1])
      {
        swap(array[index], array[index + 1]);
      }
    }
  }
}

//***************************************************
// Funkcja swap() zamieniawartości argumentów a i b.
//***************************************************
void swap(int &a, int &b)
{
  int temp = a;
  a = b;
  b = temp;
}
